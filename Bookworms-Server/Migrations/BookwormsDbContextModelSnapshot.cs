// <auto-generated />
using System;
using BookwormsServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookwormsServer.Migrations
{
    [DbContext(typeof(BookwormsDbContext))]
    partial class BookwormsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BookwormsServer.Models.Entities.Book", b =>
                {
                    b.Property<string>("BookId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClassroomCode")
                        .HasColumnType("varchar(6)");

                    b.Property<int?>("CoverId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Isbn10")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Isbn13")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("PageCount")
                        .HasColumnType("int");

                    b.Property<int>("PublishYear")
                        .HasColumnType("int");

                    b.Property<double?>("StarRating")
                        .HasColumnType("double");

                    b.Property<string>("Subjects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TimeAdded")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("BookId");

                    b.HasIndex("ClassroomCode");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Child", b =>
                {
                    b.Property<string>("ChildId")
                        .HasMaxLength(14)
                        .HasColumnType("char");

                    b.Property<int>("ChildIcon")
                        .HasColumnType("int");

                    b.Property<string>("ClassroomCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ParentUsername")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ReadingLevel")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.HasKey("ChildId");

                    b.HasIndex("ClassroomCode");

                    b.HasIndex("ParentUsername");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ChildBookshelf", b =>
                {
                    b.Property<int>("BookshelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookshelfId"));

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("char(22)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("BookshelfId");

                    b.HasIndex("ChildId");

                    b.ToTable("ChildBookshelves");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ChildBookshelfBook", b =>
                {
                    b.Property<int>("BookshelfId")
                        .HasColumnType("int");

                    b.Property<string>("BookId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("BookshelfId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("ChildBookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Classroom", b =>
                {
                    b.Property<string>("ClassroomCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("ClassroomName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TeacherUsername")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ClassroomCode");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ClassroomBookshelf", b =>
                {
                    b.Property<int>("BookshelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookshelfId"));

                    b.Property<string>("ClassroomCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("BookshelfId");

                    b.HasIndex("ClassroomCode");

                    b.ToTable("ClassroomBookshelves");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ClassroomBookshelfBook", b =>
                {
                    b.Property<int>("BookshelfId")
                        .HasColumnType("int");

                    b.Property<string>("BookId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("BookshelfId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("ClassroomBookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.CompletedBookshelf", b =>
                {
                    b.Property<int>("BookshelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookshelfId"));

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("char(22)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("BookshelfId");

                    b.HasIndex("ChildId")
                        .IsUnique();

                    b.ToTable("CompletedBookshelves");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.CompletedBookshelfBook", b =>
                {
                    b.Property<int>("BookshelfId")
                        .HasColumnType("int");

                    b.Property<string>("BookId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("StarRating")
                        .HasColumnType("double");

                    b.HasKey("BookshelfId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("CompletedBookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.InProgressBookshelf", b =>
                {
                    b.Property<int>("BookshelfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookshelfId"));

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("char(22)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("BookshelfId");

                    b.HasIndex("ChildId")
                        .IsUnique();

                    b.ToTable("InProgressBookshelves");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.InProgressBookshelfBook", b =>
                {
                    b.Property<int>("BookshelfId")
                        .HasColumnType("int");

                    b.Property<string>("BookId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("BookshelfId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("InProgressBookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReviewText")
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)");

                    b.Property<double>("StarRating")
                        .HasColumnType("double");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ReviewId");

                    b.HasIndex("Username");

                    b.HasIndex("BookId", "Username")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("UserIcon")
                        .HasColumnType("int");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Admin", b =>
                {
                    b.HasBaseType("BookwormsServer.Models.Entities.User");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Parent", b =>
                {
                    b.HasBaseType("BookwormsServer.Models.Entities.User");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("Parent");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Teacher", b =>
                {
                    b.HasBaseType("BookwormsServer.Models.Entities.User");

                    b.Property<string>("ClassroomCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.HasIndex("ClassroomCode")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Book", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Classroom", null)
                        .WithMany("Books")
                        .HasForeignKey("ClassroomCode");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Child", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Classroom", "Classroom")
                        .WithMany("Children")
                        .HasForeignKey("ClassroomCode");

                    b.HasOne("BookwormsServer.Models.Entities.Parent", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ChildBookshelf", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Child", "Child")
                        .WithMany("Bookshelves")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ChildBookshelfBook", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Book", "Book")
                        .WithMany("ChildBookshelfBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookwormsServer.Models.Entities.ChildBookshelf", "Bookshelf")
                        .WithMany("BookshelfBooks")
                        .HasForeignKey("BookshelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Bookshelf");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ClassroomBookshelf", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Classroom", "Classroom")
                        .WithMany("ClassroomBookshelves")
                        .HasForeignKey("ClassroomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ClassroomBookshelfBook", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Book", "Book")
                        .WithMany("ClassroomBookshelfBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookwormsServer.Models.Entities.ClassroomBookshelf", "Bookshelf")
                        .WithMany("BookshelfBooks")
                        .HasForeignKey("BookshelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Bookshelf");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.CompletedBookshelf", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Child", "Child")
                        .WithOne("Completed")
                        .HasForeignKey("BookwormsServer.Models.Entities.CompletedBookshelf", "ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.CompletedBookshelfBook", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Book", "Book")
                        .WithMany("CompletedBookshelfBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookwormsServer.Models.Entities.CompletedBookshelf", "Bookshelf")
                        .WithMany("BookshelfBooks")
                        .HasForeignKey("BookshelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Bookshelf");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.InProgressBookshelf", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Child", "Child")
                        .WithOne("InProgress")
                        .HasForeignKey("BookwormsServer.Models.Entities.InProgressBookshelf", "ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.InProgressBookshelfBook", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Book", "Book")
                        .WithMany("InProgressBookshelfBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookwormsServer.Models.Entities.InProgressBookshelf", "Bookshelf")
                        .WithMany("BookshelfBooks")
                        .HasForeignKey("BookshelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Bookshelf");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Review", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookwormsServer.Models.Entities.User", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Teacher", b =>
                {
                    b.HasOne("BookwormsServer.Models.Entities.Classroom", "Classroom")
                        .WithOne("Teacher")
                        .HasForeignKey("BookwormsServer.Models.Entities.Teacher", "ClassroomCode");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Book", b =>
                {
                    b.Navigation("ChildBookshelfBooks");

                    b.Navigation("ClassroomBookshelfBooks");

                    b.Navigation("CompletedBookshelfBooks");

                    b.Navigation("InProgressBookshelfBooks");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Child", b =>
                {
                    b.Navigation("Bookshelves");

                    b.Navigation("Completed");

                    b.Navigation("InProgress");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ChildBookshelf", b =>
                {
                    b.Navigation("BookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Classroom", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Children");

                    b.Navigation("ClassroomBookshelves");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.ClassroomBookshelf", b =>
                {
                    b.Navigation("BookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.CompletedBookshelf", b =>
                {
                    b.Navigation("BookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.InProgressBookshelf", b =>
                {
                    b.Navigation("BookshelfBooks");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.User", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BookwormsServer.Models.Entities.Parent", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
